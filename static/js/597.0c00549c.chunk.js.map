{"version":3,"file":"static/js/597.0c00549c.chunk.js","mappings":"yNAyCA,UAnCa,WACV,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACfI,GAASC,EAAAA,EAAAA,MAATD,QAeP,OAdAE,EAAAA,EAAAA,YAAU,WACb,IAAMC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAC,EAAMC,GAAE,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEDC,EAAAA,EAAAA,IAAS,GAAAC,OATpB,qCASiC,KAAAA,OAAIP,EAAE,qBAAAO,OARxC,mCAQmE,oBAAmB,KAAD,EAAAN,EAAAE,EAAAK,KAAtFN,EAAID,EAAJC,KAEPX,EAASW,EAAKO,MAAMN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAGxBQ,QAAQC,IAAGT,EAAAO,IAAQ,yBAAAP,EAAAU,OAAA,GAAAd,EAAA,kBAEjB,gBATae,GAAA,OAAAlB,EAAAmB,MAAA,KAAAC,UAAA,KAUZrB,EAAYH,EACd,GAAE,CAACA,KAEKyB,EAAAA,EAAAA,KAAA,OAAAC,UACLD,EAAAA,EAAAA,KAAA,MAAAC,SACI5B,EAAM6B,KAAI,SAAAC,GAAoD,IAAlDC,EAAaD,EAAbC,cAAcC,EAAYF,EAAZE,aAAaC,EAAOH,EAAPG,QAAQC,EAASJ,EAATI,UAAmBC,EApBjD,kCAoB2EH,EAC9F,OACCI,EAAAA,EAAAA,MAAA,MAAAR,SAAA,EACAD,EAAAA,EAAAA,KAAA,OACSU,IAAKF,EACLG,IAAI,YACJC,MAAM,SAERZ,EAAAA,EAAAA,KAAA,MAAAC,SAAKG,KACLK,EAAAA,EAAAA,MAAA,KAAAR,SAAA,CAAG,cAAYM,OAPbD,EASR,OAIV,C","sources":["components/Cast.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst BASE_URL=`https://api.themoviedb.org/3/movie`;\nconst API_KEY=`1751ed552758886790b5045f1f278379`\nconst MOVIE_POSTER_LINK  = 'https://image.tmdb.org/t/p/w500';\nconst Cast = () => {\n   const [casts, setCasts]=useState([]);\n   const {movieId}=useParams();\n   useEffect(()=>{\nconst handleFetch= async id =>{\n   try{\n      const {data}= await axios.get (`${BASE_URL}/${id}/credits?api_key=${API_KEY}&language=en-US`);\n      // console.log(data);\n      setCasts(data.cast);\n   }\n   catch(error){\n  console.log(error);\n   }\n   }    \n     handleFetch(movieId)\n   },[movieId])\n     \n   return (<div>\n      <ul>\n         {casts.map(({original_name,profile_path,cast_id,character,})=>{let imgLink=MOVIE_POSTER_LINK+profile_path;\n        return(\n         <li key={cast_id}>\n         <img\n                  src={imgLink}\n                  alt=\"character\"\n                  width=\"150\"\n                />\n                <h3>{original_name}</h3>\n                <p>Character: {character}</p>\n         </li>\n        ) }\n         )}\n      </ul>\n   </div>)\n};\nexport default Cast;\n"],"names":["_useState","useState","_useState2","_slicedToArray","casts","setCasts","movieId","useParams","useEffect","handleFetch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","_yield$axios$get","data","_context","prev","next","axios","concat","sent","cast","t0","console","log","stop","_x","apply","arguments","_jsx","children","map","_ref2","original_name","profile_path","cast_id","character","imgLink","_jsxs","src","alt","width"],"sourceRoot":""}