{"version":3,"file":"static/js/681.1eff5c4f.chunk.js","mappings":"yNAsCA,UAjCgB,WACb,IAAAA,GAA2BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,EAAOF,EAAA,GAACG,EAAUH,EAAA,GAEjBI,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAhBAE,EAAAA,EAAAA,YAAU,WACP,IAAMC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAC,EAAMC,GAAE,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAECC,EAAAA,EAAAA,IAAU,GAADC,OAT3B,qCASuC,KAAAA,OAAIP,EAAE,qBAAAO,OAR9C,mCAQyE,mBAAkB,KAAD,EAAAN,EAAAE,EAAAK,KAArFN,EAAID,EAAJC,KACPO,QAAQC,IAAIR,GACZX,EAAWW,EAAKS,SAASR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAGzBM,QAAQC,IAAGP,EAAAS,IAAQ,WAEF,IAAjBtB,EAAQuB,OAAU,CAAAV,EAAAE,KAAA,gBAAAF,EAAAW,OAAA,UACXC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,2CAAyC,yBAAAb,EAAAc,OAAA,GAAAlB,EAAA,kBAExD,gBAZgBmB,GAAA,OAAAtB,EAAAuB,MAAA,KAAAC,UAAA,KAajBzB,EAAYH,EACf,GAAE,CAACA,EAAQF,EAAQuB,UACXE,EAAAA,EAAAA,KAAA,OAAAC,UACLD,EAAAA,EAAAA,KAAA,MAAAC,SAAK1B,EAAQ+B,KAAI,SAAAC,GAAwB,IAAtBC,EAAMD,EAANC,OAAOvB,EAAEsB,EAAFtB,GAAGwB,EAAOF,EAAPE,QAChC,OAAST,EAAAA,EAAAA,KAAAU,EAAAA,SAAA,CAAAT,UACHU,EAAAA,EAAAA,MAAA,MAAAV,SAAA,EACGD,EAAAA,EAAAA,KAAA,MAAAC,SAAKO,KACJR,EAAAA,EAAAA,KAAA,KAAAC,SAAIQ,MAFCxB,IAMZ,OAGN,C","sources":["components/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nconst BASE_URL=`https://api.themoviedb.org/3/movie`;\nconst API_KEY=`1751ed552758886790b5045f1f278379`\nconst Reviews = () => {\n   const [reviews,setReviews]=useState([]);\n\n   const { movieId } = useParams();\n   useEffect(()=>{\n      const handleFetch=async id =>{\n         try{\n            const {data}=  await axios.get(`${BASE_URL}/${id}/reviews?api_key=${API_KEY}&anguage=en-US`);\n            console.log(data);\n            setReviews(data.results);\n         }\n         catch(error){\n            console.log(error);\n         }\n         if(reviews.length===0){\n            return <p>We don't have reviews for this movie.</p>\n         }\n      }\n      handleFetch(movieId)\n   },[movieId,reviews.length])\n   return (<div>\n      <ul>{reviews.map(({author,id,content})=>{\n   return(  <> \n         <li key={id}>\n            <h2>{author}</h2>\n             <p>{content}</p>\n         </li>\n         </>\n         )\n      })}\n      </ul>\n   </div>)\n};\nexport default Reviews;"],"names":["_useState","useState","_useState2","_slicedToArray","reviews","setReviews","movieId","useParams","useEffect","handleFetch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","_yield$axios$get","data","_context","prev","next","axios","concat","sent","console","log","results","t0","length","abrupt","_jsx","children","stop","_x","apply","arguments","map","_ref2","author","content","_Fragment","_jsxs"],"sourceRoot":""}